{"version":3,"sources":["layout/Workspace.module.css","components/Shape.module.css","App.module.css","layout/SidePanel.module.css","util/geometry.ts","layout/Workspace.slice.ts","components/Shape.util.ts","components/Polygon.tsx","components/Shape.tsx","util/symbols.ts","layout/SidePanel.tsx","layout/Workspace.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","minAndMax","a","b","Math","min","max","areIntersected","r1","r2","left1","right1","top1","bottom1","left2","right2","top2","bottom2","savedData","window","localStorage","getItem","initialState","objects","JSON","parse","map","properties","selected","workspaceSize","undefined","workspacePosition","selectedObjects","lastColor","lastBorderColor","nonCompleteSelectedObjects","nonCompleteUnselectedObjects","previousCursorPositionOnMoving","firstCursorPositionOnSelecting","saved","saveTimoutId","selectionFrame","getActualSlectionList","state","actualSelectedObjects","length","push","unselected","indexOf","filter","workspaceSlice","createSlice","name","reducers","setWorkspaceProperties","payload","position","size","setColor","color","i","setBorderColor","border","create","shape","width","height","select","index","includes","unselectAll","selectAll","entries","deleteSelected","mouseDownOnObject","action","objectIndex","x","y","shiftKey","slice","mouseDownOnWorkspace","framePoint","point","mouseUpOrMoveOnWorkspace","rectangle","type","currentCursorPosition","previous","coordinate","offset","object","cursorNotMoved","save","clearTimeout","notDeletedObjects","value","setItem","stringify","setSaveTimeout","timeoutId","actions","saveWithBounce","dispatch","setTimeout","withBouncedSave","selectWorkspace","workspace","Polygon","boxWidth","boxHeight","angles","style","eventHandlers","halfOfStroke","strokeWidth","limitedWidth","limitedHeight","polygonPoints","xmlns","String","viewBox","points","Shape","margin","selectionFrameStyle","regexResult","exec","selectionFrameWidth","className","styles","container","join","fill","stroke","SHAPE_SIZE","SHAPE_BORDER","SHAPE_VARIANTS","SidePanel","useDispatch","useSelector","block","blockShapes","shapes","key","onClick","blockStyle","property","propertyFill","disabled","onChange","event","target","propertyBorder","savingStatus","Workspace","workspaceDomElement","useRef","offsetWidth","current","offsetHeight","useEffect","offsetLeft","offsetTop","onWindowResize","addEventListener","removeEventListener","keyboardEventHandler","code","ctrlKey","altKey","document","visibilityChangeHandler","visibilityState","windowCloseHandler","ref","onMouseDown","clientX","clientY","onMouseUp","onMouseMove","placedShapeContainer","left","top","stopPropagation","App","store","configureStore","reducer","workspaceReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.95f5a608.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Workspace_container__3ekjz\",\"placedShapeContainer\":\"Workspace_placedShapeContainer__37Jcn\",\"selectionFrame\":\"Workspace_selectionFrame__laqWK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Shape_container__2Sk0S\",\"placed\":\"Shape_placed__1JReE\",\"selected\":\"Shape_selected__DvLwZ\",\"polygon\":\"Shape_polygon__3w0Ec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2Jf1A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SidePanel_container__1K-Pa\",\"block\":\"SidePanel_block__3EQeg\",\"shapes\":\"SidePanel_shapes__RRv-I\",\"blockStyle\":\"SidePanel_blockStyle__1SXU7\",\"property\":\"SidePanel_property__3Xp4c\",\"savingStatus\":\"SidePanel_savingStatus__3YyW8\"};","export type Point = [number, number];\r\nexport type Rectangle = [ Point, Point ];\r\n\r\nconst minAndMax = (...[a, b]: number[]) => [\r\n    Math.min(a, b),\r\n    Math.max(a, b),\r\n]\r\n\r\nexport function areIntersected(...[r1, r2]: Rectangle[]): boolean {\r\n    const [left1, right1] = minAndMax(r1[0][0], r1[1][0]);\r\n    const [top1, bottom1] = minAndMax(r1[0][1], r1[1][1]);\r\n    \r\n    const [left2, right2] = minAndMax(r2[0][0], r2[1][0]);\r\n    const [top2, bottom2] = minAndMax(r2[0][1], r2[1][1]);\r\n\r\n    return left1 <= right2\r\n        && left2 <= right1\r\n        && top1 <= bottom2\r\n        && top2 <= bottom1;\r\n}\r\n\r\nexport function normilizeRectangle(rectangle: Rectangle): Rectangle {\r\n    return [\r\n        [\r\n            Math.min(rectangle[0][0], rectangle[1][0]),\r\n            Math.min(rectangle[0][1], rectangle[1][1]),\r\n        ],\r\n        [\r\n            Math.max(rectangle[0][0], rectangle[1][0]),\r\n            Math.max(rectangle[0][1], rectangle[1][1]),\r\n        ],\r\n    ];\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { AppThunk, RootState } from '../app/store';\r\n\r\nimport { StorableShape, frame, Shape } from '../components/Shape.util';\r\nimport { areIntersected, Rectangle, Point, normilizeRectangle } from '../util/geometry';\r\n\r\n\r\nconst LS_KEY_OBJECTS = 'objects';\r\nconst BOUNCE_DELAY_FOR_SAVING = 5000; // ms\r\n\r\nconst savedData = window.localStorage.getItem(LS_KEY_OBJECTS);\r\nconst savedObjects = savedData ? JSON.parse(savedData) as StorableShape[] : [];\r\n\r\nconst objects: StorableShape[] = savedObjects.map(properties => ({\r\n    ...properties,\r\n    selected: false,\r\n}));\r\n\r\nconst initialState = {\r\n    objects,\r\n    workspaceSize: undefined as undefined | Shape['size'],\r\n    workspacePosition: undefined as undefined | Point,\r\n    selectedObjects: [] as number[],\r\n    lastColor: undefined as undefined | string,\r\n    lastBorderColor: undefined as undefined | string,\r\n    nonCompleteSelectedObjects: [] as number[],\r\n    nonCompleteUnselectedObjects: [] as number[],\r\n    previousCursorPositionOnMoving: undefined as undefined | [number, number],\r\n    firstCursorPositionOnSelecting: undefined as undefined | [number, number],\r\n    saved: true,\r\n    saveTimoutId: undefined as undefined | number,\r\n    selectionFrame: undefined as undefined | Rectangle,\r\n};\r\n\r\nconst getActualSlectionList = (state: RootState['workspace']) => {\r\n    const {\r\n        selectedObjects,\r\n        nonCompleteSelectedObjects,\r\n        nonCompleteUnselectedObjects,\r\n    } = state;\r\n\r\n    const actualSelectedObjects = [...selectedObjects];\r\n\r\n    if (nonCompleteSelectedObjects.length) {\r\n        actualSelectedObjects.push(...nonCompleteSelectedObjects);\r\n    }\r\n\r\n    if (nonCompleteUnselectedObjects.length) {\r\n        for (const unselected of nonCompleteUnselectedObjects) {\r\n            delete actualSelectedObjects[actualSelectedObjects.indexOf(unselected)];\r\n        }\r\n    }\r\n\r\n    return actualSelectedObjects.filter(a => a !== undefined);\r\n};\r\n\r\nexport const workspaceSlice = createSlice({\r\n    name: 'workspace',\r\n    initialState,\r\n    reducers: {\r\n        setWorkspaceProperties(state, { payload }: PayloadAction<{ size: Shape['size'], position: Point }>) {\r\n            state.workspacePosition = payload.position;\r\n            state.workspaceSize = payload.size;\r\n        },\r\n\r\n        setColor(state, { payload: color }: PayloadAction<string>) {\r\n            for (const i of state.selectedObjects) {\r\n                state.objects[i].color = color;\r\n            }\r\n\r\n            state.lastColor = color;\r\n        },\r\n\r\n        setBorderColor(state, { payload: color }: PayloadAction<string>) {\r\n            for (const i of state.selectedObjects) {\r\n                state.objects[i].border.color = color;\r\n            }\r\n\r\n            state.lastBorderColor = color;\r\n        },\r\n\r\n        create(state, { payload: shape }: PayloadAction<Shape>) {\r\n            const { workspaceSize } = state;\r\n\r\n            if (workspaceSize) {\r\n                state.objects.push({\r\n                    ...shape,\r\n                    position: [\r\n                        workspaceSize.width / 2 - shape.size.width / 2,\r\n                        workspaceSize.height / 2 - shape.size.height / 2,\r\n                    ],\r\n                });\r\n    \r\n                state.selectedObjects = [state.objects.length - 1];\r\n            }\r\n        },\r\n\r\n        select(state, { payload: index }: PayloadAction<number>) {\r\n            if (!state.selectedObjects.includes(index)) {\r\n                state.selectedObjects.push(index);\r\n            }\r\n        },\r\n\r\n        unselectAll(state) {\r\n            state.selectedObjects = [];\r\n        },\r\n\r\n        selectAll(state) {\r\n            state.selectedObjects = [];\r\n\r\n            for (const [i, object] of state.objects.entries()) {\r\n                if (!object) {\r\n                    continue;\r\n                }\r\n\r\n                state.selectedObjects.push(i);\r\n            }\r\n        },\r\n\r\n        deleteSelected(state) {\r\n            for (const i of state.selectedObjects) {\r\n                delete state.objects[i];\r\n                // NOTE: Use delete operator only,\r\n                // because the index uses as key\r\n                // for instance of React-component.\r\n            }\r\n\r\n            state.selectedObjects = [];\r\n        },\r\n\r\n        mouseDownOnObject(\r\n            state,\r\n            action: PayloadAction<{\r\n                objectIndex: number\r\n                x: number\r\n                y: number\r\n                shiftKey: boolean\r\n            }>\r\n        ) {\r\n            const { payload: { objectIndex, x, y, shiftKey } } = action;\r\n\r\n            state.previousCursorPositionOnMoving = [x, y];\r\n\r\n            if (shiftKey) {\r\n                const position = state.selectedObjects.indexOf(objectIndex);\r\n\r\n                if (position === -1) {\r\n                    state.selectedObjects.push(objectIndex);\r\n                } else {\r\n                    state.selectedObjects = [\r\n                        ...state.selectedObjects.slice(0, position),\r\n                        ...state.selectedObjects.slice(position + 1),\r\n                    ];\r\n                }\r\n            } else {\r\n                if (!state.selectedObjects.includes(objectIndex)) {\r\n                    state.selectedObjects = [objectIndex];\r\n                }\r\n            }\r\n        },\r\n\r\n        mouseDownOnWorkspace(\r\n            state,\r\n            action: PayloadAction<{\r\n                point: Point,\r\n                shiftKey: boolean,\r\n            }>\r\n        ) {\r\n            // Selecting:\r\n            if (state.workspacePosition) {\r\n                const framePoint: Point = [\r\n                    action.payload.point[0] - state.workspacePosition[0],\r\n                    action.payload.point[1] - state.workspacePosition[1],\r\n                ];\r\n\r\n                state.selectionFrame = [framePoint, framePoint];\r\n                state.firstCursorPositionOnSelecting = action.payload.point;\r\n\r\n                if (!action.payload.shiftKey) {\r\n                    state.selectedObjects = [];\r\n                }\r\n            }\r\n        },\r\n\r\n        mouseUpOrMoveOnWorkspace(\r\n            state,\r\n            { payload }: PayloadAction<{\r\n                type: 'up' | 'move'\r\n                currentCursorPosition: Point\r\n                shiftKey: boolean\r\n            } | {\r\n                type: 'shiftToggled'\r\n                shiftKey: boolean\r\n            }>\r\n        ) {\r\n            const {\r\n                previousCursorPositionOnMoving,\r\n                firstCursorPositionOnSelecting,\r\n                selectedObjects,\r\n            } = state;\r\n\r\n            const { shiftKey } = payload;\r\n\r\n            // Moving:\r\n            if (payload.type === 'move' && previousCursorPositionOnMoving) {\r\n                const { currentCursorPosition } = payload;\r\n                const previous = previousCursorPositionOnMoving;\r\n\r\n                for (const i of state.selectedObjects) {\r\n                    for (const coordinate of [0, 1]) {\r\n                        const offset = currentCursorPosition[coordinate] - previous[coordinate];\r\n\r\n                        state.objects[i].position[coordinate] += offset;\r\n                    }\r\n                }\r\n\r\n                state.previousCursorPositionOnMoving = currentCursorPosition;\r\n            }\r\n\r\n            // Selecting:\r\n            if (firstCursorPositionOnSelecting && state.workspacePosition && state.selectionFrame) {\r\n                if (payload.type !== 'shiftToggled') {\r\n                    const { currentCursorPosition } = payload;\r\n\r\n                    state.selectionFrame = normilizeRectangle([\r\n                        [\r\n                            firstCursorPositionOnSelecting[0] - state.workspacePosition[0],\r\n                            firstCursorPositionOnSelecting[1] - state.workspacePosition[1],\r\n                        ],\r\n                        [\r\n                            currentCursorPosition[0] - state.workspacePosition[0],\r\n                            currentCursorPosition[1] - state.workspacePosition[1],\r\n                        ],\r\n                    ]);\r\n                }\r\n\r\n                state.nonCompleteSelectedObjects = [];\r\n                state.nonCompleteUnselectedObjects = [];\r\n\r\n                const {\r\n                    nonCompleteSelectedObjects,\r\n                    nonCompleteUnselectedObjects,\r\n                } = state;\r\n\r\n                for (const [i, object] of state.objects.entries()) {\r\n                    if (!object) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (areIntersected(frame(object), state.selectionFrame)) {\r\n                        if (shiftKey) {\r\n                            if (selectedObjects.includes(i)) {\r\n                                if (!nonCompleteUnselectedObjects.includes(i)) {\r\n                                    nonCompleteUnselectedObjects.push(i);\r\n                                }\r\n                            } else {\r\n                                if (!nonCompleteSelectedObjects.includes(i)) {\r\n                                    nonCompleteSelectedObjects.push(i);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            if (!selectedObjects.includes(i)) {\r\n                                if (!nonCompleteSelectedObjects.includes(i)) {\r\n                                    nonCompleteSelectedObjects.push(i);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                state.nonCompleteSelectedObjects = nonCompleteSelectedObjects.filter(a => a !== undefined);\r\n                state.nonCompleteUnselectedObjects = nonCompleteUnselectedObjects.filter(a => a !== undefined);\r\n            }\r\n\r\n            // End:\r\n            if (payload.type === 'up') {\r\n                const { currentCursorPosition } = payload;\r\n\r\n                const cursorNotMoved = (\r\n                    firstCursorPositionOnSelecting?.[0] === currentCursorPosition[0]\r\n                    && firstCursorPositionOnSelecting?.[1] === currentCursorPosition[1]\r\n                );\r\n\r\n                if (cursorNotMoved) {\r\n                    state.selectedObjects = [];\r\n                } else {\r\n                    state.selectedObjects = getActualSlectionList(state);\r\n                }\r\n\r\n                state.nonCompleteSelectedObjects = [];\r\n                state.nonCompleteUnselectedObjects = [];\r\n                state.previousCursorPositionOnMoving = undefined;\r\n                state.firstCursorPositionOnSelecting = undefined;\r\n                state.selectionFrame = undefined;\r\n            }\r\n        },\r\n\r\n        save(state) {\r\n            if (state.saveTimoutId) {\r\n                window.clearTimeout(state.saveTimoutId);\r\n                state.saveTimoutId = undefined;\r\n            }\r\n\r\n            state.saved = true;\r\n\r\n            const notDeletedObjects = state.objects.filter(value => value);\r\n            window.localStorage.setItem(LS_KEY_OBJECTS, JSON.stringify(notDeletedObjects));\r\n        },\r\n\r\n        setSaveTimeout(state, { payload: timeoutId }: PayloadAction<number>) {\r\n            if (state.saveTimoutId) {\r\n                window.clearTimeout(state.saveTimoutId);\r\n            }\r\n\r\n            state.saveTimoutId = timeoutId;\r\n            state.saved = false;\r\n        },\r\n    },\r\n});\r\n\r\nexport const {\r\n    setWorkspaceProperties,\r\n    create,\r\n    select,\r\n    unselectAll,\r\n    selectAll,\r\n    deleteSelected,\r\n    mouseDownOnObject,\r\n    mouseDownOnWorkspace,\r\n    mouseUpOrMoveOnWorkspace,\r\n    save,\r\n    setColor,\r\n    setBorderColor,\r\n    setSaveTimeout,\r\n} = workspaceSlice.actions;\r\n\r\nexport const saveWithBounce = (): AppThunk => dispatch => {\r\n    const timeoutId = window.setTimeout(() => {\r\n        dispatch(save());\r\n    }, BOUNCE_DELAY_FOR_SAVING);\r\n\r\n    dispatch(setSaveTimeout(timeoutId));\r\n};\r\n\r\nexport const withBouncedSave = (action: PayloadAction<unknown>): AppThunk => dispatch => {\r\n    dispatch(action);\r\n    dispatch(saveWithBounce());\r\n};\r\n\r\nexport function selectWorkspace(state: RootState) {\r\n    return {\r\n        ...state.workspace,\r\n        selectedObjects: getActualSlectionList(state.workspace),\r\n    };\r\n}\r\n\r\nexport default workspaceSlice.reducer;\r\n","import { Rectangle } from \"../util/geometry\";\r\n\r\n\r\nexport interface Shape {\r\n    type: 'rectangle' | 'triangle'\r\n\r\n    size: {\r\n        width: number\r\n        height: number\r\n    }\r\n\r\n    color?: string\r\n\r\n    border: {\r\n        width: number\r\n        color?: string\r\n    }\r\n}\r\n\r\nexport interface StorableShape extends Shape {\r\n    position: [number, number]\r\n}\r\n\r\nexport interface SelectableShape extends Shape {\r\n    selected: boolean\r\n}\r\n\r\n/**\r\n * Return shape coordinates as rectangle.\r\n */\r\nexport function frame(shape: StorableShape): Rectangle {\r\n    return [\r\n        [\r\n            shape.position[0],\r\n            shape.position[1],\r\n        ],\r\n        [\r\n            shape.position[0] + shape.size.width,\r\n            shape.position[1] + shape.size.height,\r\n        ],\r\n    ];\r\n}\r\n","import React from 'react';\r\nimport './Polygon.module.css';\r\n\r\n\r\nexport interface Props {\r\n    boxWidth: number\r\n    boxHeight: number\r\n    angles: 3 | 4\r\n    \r\n    /**\r\n     * NOTE: `style.strokeWidth` will be set to `0` if not provided.\r\n     * Provide `strokeWidth` here, because other CSS rules will be overridden.\r\n     */\r\n    style?: React.CSSProperties\r\n\r\n    /**\r\n     * Only `svg` events can be observed.\r\n     * \r\n     * Event handlers will attach to inside `polygon` element to save its shape\r\n     * for events.\r\n     */\r\n    eventHandlers?: React.SVGProps<SVGPolygonElement>\r\n}\r\n\r\nexport default function Polygon({ boxWidth, boxHeight, angles, style, eventHandlers }: Props) {\r\n    style = {\r\n        strokeWidth: 0,\r\n        ...style,\r\n    };\r\n    \r\n    const strokeWidth = style.strokeWidth as number;\r\n\r\n    const halfOfStroke = strokeWidth / 2;\r\n    const limitedWidth = boxWidth - halfOfStroke;\r\n    const limitedHeight = boxHeight - halfOfStroke;\r\n\r\n    const polygonPoints = (angles === 3) ? (`\r\n        ${boxWidth / 2},${halfOfStroke}\r\n        ${limitedWidth},${limitedHeight}\r\n        ${halfOfStroke},${limitedHeight}\r\n    `) : (`\r\n        ${halfOfStroke},${halfOfStroke}\r\n        ${limitedWidth},${halfOfStroke}\r\n        ${limitedWidth},${limitedHeight}\r\n        ${halfOfStroke},${limitedHeight}\r\n    `);\r\n\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width={String(boxWidth)}\r\n            height={String(boxHeight)}\r\n            viewBox={`0 0 ${boxWidth} ${boxHeight}`}\r\n            style={style}\r\n        >\r\n            <polygon\r\n                points={polygonPoints}\r\n                {...eventHandlers}\r\n            />\r\n        </svg>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport Polygon, { Props as PolygonProps } from './Polygon';\r\nimport { SelectableShape } from './Shape.util';\r\nimport styles from \"./Shape.module.css\";\r\nimport { SPACE } from '../util/symbols';\r\n\r\n\r\nexport interface Props extends SelectableShape {\r\n    /**\r\n     * Value of CSS `border` property. Example: `2px blue dashed`.\r\n     */\r\n    selectionFrameStyle?: string\r\n\r\n    /**\r\n     * See `eventHandlers` in `Props` from `components/polygon.tsx`.\r\n     */\r\n    eventHandlers?: PolygonProps['eventHandlers']\r\n}\r\n\r\nexport default function Shape({\r\n    type,\r\n    size: { width, height },\r\n    border,\r\n    color,\r\n    selected,\r\n    selectionFrameStyle,\r\n    eventHandlers\r\n}: Props) {\r\n    let margin: number | undefined;\r\n\r\n    if (selectionFrameStyle) {\r\n        // Get border weight of selection frame:\r\n        const regexResult = /(\\d)+px/.exec(selectionFrameStyle);\r\n        const selectionFrameWidth = regexResult?.[1];\r\n        \r\n        // Compensate frame border via margin to prevent size changing:\r\n        margin = selectionFrameWidth ? -selectionFrameWidth : undefined;\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={[styles.container, (selected ? styles.selected : '')].join(SPACE)}\r\n            style={!selected ? undefined : {\r\n                border: selectionFrameStyle,\r\n                margin\r\n            }}\r\n        >\r\n            <Polygon\r\n                boxWidth={width}\r\n                boxHeight={height}\r\n                angles={type === 'rectangle' ? 4 : 3}\r\n                style={{\r\n                    fill: color,\r\n                    strokeWidth: border.width,\r\n                    stroke: border.color\r\n                }}\r\n                eventHandlers={eventHandlers}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","/**\r\n * “Space” the ASCII character.\r\n */\r\nexport const SPACE = '\\u0020';\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport {\r\n    create,\r\n    selectWorkspace,\r\n    setColor,\r\n    setBorderColor,\r\n    withBouncedSave,\r\n} from './Workspace.slice';\r\nimport { Shape as ShapeInterface } from '../components/Shape.util';\r\nimport Shape from '../components/Shape';\r\nimport styles from './SidePanel.module.css';\r\nimport { SPACE } from '../util/symbols';\r\n\r\n\r\nconst SHAPE_TYPES: Array<ShapeInterface['type']> = ['rectangle', 'triangle'];\r\n\r\nconst SHAPE_SIZE = {\r\n    width: 80,\r\n    height: 40,\r\n};\r\n\r\nconst SHAPE_BORDER = {\r\n    width: 3,\r\n    color: '#818181',\r\n};\r\n\r\nconst SHAPE_COLOR = '#EAEAEA';\r\n\r\nconst SELECTION_FRAME_STYLE = '2px dashed #2F80ED';\r\n\r\nconst SHAPE_VARIANTS: ShapeInterface[] = SHAPE_TYPES.map(type => ({\r\n    type,\r\n    size: SHAPE_SIZE,\r\n    color: SHAPE_COLOR,\r\n    border: SHAPE_BORDER,\r\n}));\r\n\r\n\r\nexport default function SidePanel() {\r\n    const dispatch = useDispatch();\r\n    const {\r\n        workspaceSize,\r\n        saved,\r\n        objects,\r\n        selectedObjects,\r\n        lastColor,\r\n        lastBorderColor,\r\n    } = useSelector(selectWorkspace);\r\n    \r\n    return (\r\n        <div className={styles.container}>\r\n            <div className={[styles.block, styles.blockShapes].join(SPACE)}>\r\n                <h2>Shapes</h2>\r\n                <div className={styles.shapes}>\r\n                    {\r\n                        SHAPE_VARIANTS.map(shape => (\r\n                            <Shape\r\n                                key={shape.type}\r\n                                {...shape}\r\n                                selectionFrameStyle={SELECTION_FRAME_STYLE}\r\n                                selected={false}\r\n                                eventHandlers={{\r\n                                    onClick: () => {\r\n                                        if (workspaceSize) {\r\n                                            dispatch(withBouncedSave(create({\r\n                                                ...shape,\r\n                                                color: lastColor || SHAPE_COLOR,\r\n                                                border: {\r\n                                                    ...shape.border,\r\n                                                    color: lastBorderColor || SHAPE_BORDER.color,\r\n                                                }\r\n                                            })));\r\n                                        }\r\n                                    },\r\n                                }}\r\n                            />\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className={[styles.block, styles.blockStyle].join(SPACE)}>\r\n                <h2>Style</h2>\r\n                <div className={[styles.property, styles.propertyFill].join(SPACE)}>\r\n                    <h3>Fill</h3>\r\n                    <input\r\n                        type=\"color\"\r\n                        value={selectedObjects.length === 0 ? '#000000' : objects[selectedObjects[0]].color}\r\n                        disabled={selectedObjects.length === 0}\r\n                        onChange={event => {\r\n                            dispatch(withBouncedSave(setColor(event.target.value)));\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={[styles.property, styles.propertyBorder].join(SPACE)}>\r\n                    <h3>Border</h3>\r\n                    <input\r\n                        type=\"color\"\r\n                        value={selectedObjects.length === 0 ? '#000000' : objects[selectedObjects[0]].border.color}\r\n                        disabled={selectedObjects.length === 0}\r\n                        onChange={event => {\r\n                            dispatch(withBouncedSave(setBorderColor(event.target.value)));\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={[styles.block, styles.savingStatus].join(SPACE)}>\r\n                { saved\r\n                    ? \"Saved 👌\"\r\n                    : \"Saving... 😉\"\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Shape from '../components/Shape';\r\n\r\nimport {\r\n    selectWorkspace,\r\n    setWorkspaceProperties,\r\n    unselectAll,\r\n    deleteSelected,\r\n    mouseDownOnObject,\r\n    mouseUpOrMoveOnWorkspace,\r\n    mouseDownOnWorkspace,\r\n    selectAll,\r\n    saveWithBounce,\r\n    save,\r\n} from './Workspace.slice';\r\nimport styles from './Workspace.module.css';\r\n\r\n\r\nexport default function Workspace() {\r\n    const {\r\n        selectionFrame,\r\n        previousCursorPositionOnMoving,\r\n        firstCursorPositionOnSelecting,\r\n        objects,\r\n        selectedObjects,\r\n    } = useSelector(selectWorkspace);\r\n    const dispatch = useDispatch();\r\n\r\n    const workspaceDomElement = useRef<HTMLDivElement>(null);\r\n    const offsetWidth = workspaceDomElement.current?.offsetWidth;\r\n    const offsetHeight = workspaceDomElement.current?.offsetHeight;\r\n\r\n    useEffect(() => {\r\n        if (workspaceDomElement.current) {\r\n            const {\r\n                offsetWidth: width,\r\n                offsetHeight: height,\r\n                offsetLeft,\r\n                offsetTop,\r\n            } = workspaceDomElement.current;\r\n\r\n            const onWindowResize = () => {\r\n                dispatch(setWorkspaceProperties({\r\n                    size: { width, height },\r\n                    position: [offsetLeft, offsetTop],\r\n                }));\r\n            };\r\n\r\n            onWindowResize();\r\n\r\n            window.addEventListener('resize', onWindowResize);\r\n\r\n            return () => {\r\n                window.removeEventListener('resize', onWindowResize);\r\n            };\r\n        }\r\n    }, [offsetWidth, offsetHeight, dispatch]);\r\n\r\n    useEffect(() => {\r\n        const keyboardEventHandler = (event: KeyboardEvent) => {\r\n            if (event.type === 'keydown') {\r\n                if (event.code === 'Escape') {\r\n                    dispatch(unselectAll());\r\n                } else if (event.code === 'Delete' || event.code === 'Backspace') {\r\n                    dispatch(deleteSelected());\r\n                } else if (event.code === 'KeyA' && event.ctrlKey && !event.altKey && !event.shiftKey) {\r\n                    dispatch(selectAll());\r\n                } else if (event.key === 'Shift') {\r\n                    dispatch(mouseUpOrMoveOnWorkspace({\r\n                        type: 'shiftToggled',\r\n                        shiftKey: true,\r\n                    }));\r\n                }\r\n            } else if (event.type === 'keyup') {\r\n                if (event.key === 'Shift') {\r\n                    dispatch(mouseUpOrMoveOnWorkspace({\r\n                        type: 'shiftToggled',\r\n                        shiftKey: false,\r\n                    }));\r\n                }\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', keyboardEventHandler);\r\n        document.addEventListener('keyup', keyboardEventHandler);\r\n\r\n        return () => {\r\n            document.removeEventListener('keydown', keyboardEventHandler);\r\n            document.removeEventListener('keyup', keyboardEventHandler);\r\n        };\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        const visibilityChangeHandler = () => {\r\n            if (document.visibilityState === 'hidden') {\r\n                dispatch(save());\r\n            }\r\n        };\r\n\r\n        const windowCloseHandler = () => {\r\n            dispatch(save());\r\n        }\r\n\r\n        document.addEventListener(\"visibilitychange\", visibilityChangeHandler);\r\n        window.addEventListener('close', windowCloseHandler);\r\n\r\n        return () => {\r\n            document.removeEventListener(\"visibilitychange\", visibilityChangeHandler);\r\n            window.removeEventListener('close', windowCloseHandler);\r\n        };\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div\r\n            className={styles.container}\r\n            ref={workspaceDomElement}\r\n            onMouseDown={event => {\r\n                const { clientX, clientY, shiftKey } = event;\r\n                \r\n                if (workspaceDomElement.current) {\r\n                    dispatch(mouseDownOnWorkspace({\r\n                        point: [clientX, clientY],\r\n                        shiftKey,\r\n                    }));\r\n                }\r\n            }}\r\n            onMouseUp={({ clientX, clientY, shiftKey }) => {\r\n                dispatch(mouseUpOrMoveOnWorkspace({\r\n                    type: 'up',\r\n                    currentCursorPosition: [clientX, clientY],\r\n                    shiftKey\r\n                }));\r\n            }}\r\n            onMouseMove={({ clientX, clientY, shiftKey }) => {\r\n                if (previousCursorPositionOnMoving || firstCursorPositionOnSelecting) {\r\n                    dispatch(mouseUpOrMoveOnWorkspace({\r\n                        type: 'move',\r\n                        currentCursorPosition: [clientX, clientY],\r\n                        shiftKey\r\n                    }));\r\n\r\n                    if (previousCursorPositionOnMoving) {\r\n                        dispatch(saveWithBounce());\r\n                    }\r\n                }\r\n            }}\r\n        >\r\n            { objects.map((object, key) => object &&\r\n                <div\r\n                    key={key}\r\n                    className={styles.placedShapeContainer}\r\n                    style={{ left: object.position[0], top: object.position[1] }}\r\n                >\r\n                    <Shape\r\n                        {...object}\r\n                        selected={selectedObjects.includes(key)}\r\n                        eventHandlers={{\r\n                            onMouseDown: (event) => {\r\n                                const { clientX: x, clientY: y, shiftKey } = event;\r\n\r\n                                event.stopPropagation();\r\n\r\n                                dispatch(mouseDownOnObject({\r\n                                    objectIndex: key,\r\n                                    x,\r\n                                    y,\r\n                                    shiftKey,\r\n                                }));\r\n                            },\r\n                        }}\r\n                    />\r\n                </div>\r\n            ) }\r\n            { selectionFrame &&\r\n                <div\r\n                    className={styles.selectionFrame}\r\n                    style={{\r\n                        left: selectionFrame[0][0],\r\n                        top: selectionFrame[0][1],\r\n                        width: selectionFrame[1][0] - selectionFrame[0][0],\r\n                        height: selectionFrame[1][1] - selectionFrame[0][1],\r\n                    }}\r\n                />\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nimport SidePanel from './layout/SidePanel';\r\nimport Workspace from './layout/Workspace';\r\nimport styles from './App.module.css';\r\n\r\n\r\nexport default function App() {\r\n    return (\r\n        <div className={styles.container}>\r\n            <SidePanel />\r\n            <Workspace />\r\n        </div>\r\n    );\r\n}\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport workspaceReducer from '../layout/Workspace.slice';\r\n\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        workspace: workspaceReducer,\r\n    },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n    ReturnType,\r\n    RootState,\r\n    unknown,\r\n    Action<string>\r\n>;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { store } from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App />\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}